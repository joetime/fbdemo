function initUser (mongoose, bcrypt) {
    
    var userSchema = new mongoose.Schema({
        //_id: (autogenerated)
        
        email: String,
        username: String,
        password: String,
        
        playerName: String,
        nickName: String,
        status: String,
        role: String,
        
        hasPaid: Boolean,
        
        active: Boolean,
        deleted: Boolean
    });
    
    // before save, encrypt password
    
    userSchema.pre('save', function(next) {
        var user = this;
        user.password = user.password || 'welcome';
        console.log('saving user, password: ', user.password);
        if (!user.isModified('password')) return next();
      
        bcrypt.genSalt(10, function(err, salt) {
            if (err) return next(err);

            bcrypt.hash(user.password, salt, function(err, hash) {
                if (err) return next(err);
                user.password = hash;
                next();
            });
        });
    });

    // compare encrypted passwords
    userSchema.methods.comparePassword = function(candidatePassword, cb) {
        bcrypt.compare(candidatePassword, this.password, function(err, isMatch) {
            if (err) return cb(err);
            cb(null, isMatch);
        });
    };
    
    return userSchema;
}

module.exports.initUser = initUser;